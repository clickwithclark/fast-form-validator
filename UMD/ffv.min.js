!function webpackUniversalModuleDefinition(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var r=e();for(var o in r)("object"==typeof exports?exports:t)[o]=r[o]}}(this,(()=>(()=>{"use strict";var t={d:(e,r)=>{for(var o in r)t.o(r,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:r[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{FFV:()=>n});const r=[];let o={};function setFormState(t){o={...o,...t}}function getFormState(){return o}function getFormInputs(){return r}function hide(){document.getElementById(getFormState().feedbackElement).style.visibility="hidden"}function show(){document.getElementById(getFormState().feedbackElement).style.visibility="visible"}function display(){document.getElementById(getFormState().feedbackElement).style.display="block"}function remove(){document.getElementById(getFormState().feedbackElement).style.display="none"}function addClassName(){document.getElementById(getFormState().feedbackElement).classList.add(getFormState().feedbackClassName)}function removeClassName(){document.getElementById(getFormState().feedbackElement).classList.remove(getFormState().feedbackClassName)}function initializeInput(t,e){getFormInputs().push(t),function buildErrorList(t){const e={[t]:[]};getFormState().errors={...getFormState().errors,...e}}(t),function initInputValues(t,e){setFormState({[t]:""}),Object.defineProperty(e,`${t}Value`,{get:()=>getFormState()[t],configurable:!0})}(t,e)}function displayErrorsHere(t){getFormState().feedbackElement=t;const e=document.getElementById(t);if(e.style.wordWrap="break-work",e.style.whiteSpace="pre-wrap",!e)return console.error("ID to display the error messages not found");const r=document.createElement("ul");return r.style.listStyle="none",getFormInputs().forEach((t=>{getFormState().errors[t].forEach((t=>{const e=document.createElement("li");e.textContent=t,r.appendChild(e)}))})),e.replaceChildren(),e.appendChild(r),this}function defaultEmailStrategy(t){console.log("formInputsArr",getFormInputs()),console.log("formState",getFormState()),console.log("this[${id}Value]",this[`${t}Value`]),console.log("email1Value",this.email1Value),console.log({FFV:this}),console.log("Pretty\n",(new Error).stack.split("\n")),console.log("Ugly\n",(new Error).stack),this[`${t}Value`]||(this[`${t}Error`]="❌Email cannot be empty"),this[`${t}Value`]&&!/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(this[`${t}Value`])&&(this[`${t}Error`]="❌Email must be valid")}function defaultDateOfBirthStrategy(t,e=18){const r=this[`${t}Value`].split("-").map((t=>Number(t))),o=new Date(r).getTime(),n=(new Date).getTime();console.log({dob:o}),console.log({today:n}),console.log({dateValue:this[`${t}Value`]}),this[`${t}Value`]||(this[`${t}Error`]="❌Date of birth must be valid"),n-365.25*e*24*60*60*1e3<=o&&(this[`${t}Error`]=`❌Minimum age is ${e} years`)}function defaultPasswordStrategy(t,e=6,r=15){const o=`❌Password must contain:\n\t One uppercase letter\n\t One lowercase letter\n\t One digit\n\t Between ${e} to ${r} characters long`,n=new RegExp(String.raw`((?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{${e},${r}})`,"i");this[`${t}Value`]||(this[`${t}Error`]="❌Password cannot be empty"),this[`${t}Value`]&&!n.test(this[`${t}Value`])&&(this[`${t}Error`]=o),this[`${t}Value`].length>r&&(this[`${t}Error`]=o)}function setFormStatus(t){getFormState().isValid=t}function getFormStatus(){return getFormState().isValid}function hasMissingStrategies(){const t=[];return getFormInputs().forEach((e=>{Object.prototype.hasOwnProperty.call(getFormState().strategies,e)||t.push(e)})),t}function argumentsFor(t){return getFormState().strategies[`${t}Args`]}function executeStrategies(){if(!hasMissingStrategies().length)return getFormInputs().forEach((t=>{getFormState().errors[t]=[],function executeStrategyOf(t){argumentsFor(t)?getFormState().strategies[t](...argumentsFor(t)):getFormState().strategies[t]()}(t)})),displayErrorsHere(getFormState().feedbackElement),function formHasErrors(){let t=0;return getFormInputs().forEach((e=>{t+=getFormState().errors[e].length})),!!t}()?(function handleFailure(){getFormState().successStrategy&&getFormState().failureStrategy()}(),setFormStatus(!1)):(function handleSuccess(){getFormState().successStrategy&&getFormState().successStrategy()}(),setFormStatus(!0));console.error(`Validation strategies have not been set for the following ID's: \n${hasMissingStrategies().join("\n")}`)}function evaluateInput(t){!function saveInput(t){setFormState({[t.target.id]:t.target.value.trim()})}(t),executeStrategies()}function captureElements(){return getFormInputs().map((t=>document.getElementById(t)))}function handleFormSubmit(t){t.preventDefault(),getFormStatus()&&(this.removeEventListener("click",handleFormSubmit),getFormState().submitAction(),function stoplistening(){captureElements().forEach((t=>{t.removeEventListener("input",evaluateInput)}))}())}function onSubmitButton(t,e){getFormState().submitAction=e;return document.getElementById(t).addEventListener("click",handleFormSubmit),this}function validate(){setFormStatus(!1);return function listenToInputs(t){t.forEach((t=>{t.addEventListener("input",evaluateInput)}))}(captureElements()),executeStrategies(),getFormStatus()}function onEmail(t){return setStrategyFor(t,defaultEmailStrategy),getFormState().strategies[`${t}Args`]=[...arguments],n}function onPassword(t){return setStrategyFor(t,defaultPasswordStrategy),getFormState().strategies[`${t}Args`]=[...arguments],n}function onDateOfBirth(t){return setStrategyFor(t,defaultDateOfBirthStrategy),getFormState().strategies[`${t}Args`]=[...arguments],n}function setStrategyFor(t,e){if(initializeInput(t,n),!getFormInputs().includes(t))return void console.error(`Your ID '${t}' was not found in the list of ID's to validate, please set them first`);Object.defineProperty(n,`${t}Error`,{set(e){getFormState().errors[t].push(e)}});const r={[t]:e.bind(n)};return getFormState().strategies={...getFormState().strategies,...r},n}const n={onEmail,onPassword,onDateOfBirth,validate,setStrategyFor,onSubmitButton,onSuccess:{hideFeedback:function hideFeedback(){const t=hide;return getFormState().successStrategy=t.bind(n),getFormState().failureStrategy=show.bind(n),n},removeFeedback:function removeFeedback(){const t=remove;return getFormState().successStrategy=t.bind(n),getFormState().failureStrategy=display.bind(n),n},addClass:function addClass(t){return getFormState().feedbackClassName=t,getFormState().successStrategy=addClassName.bind(n),getFormState().failureStrategy=removeClassName.bind(n),n},removeClass:function removeClass(t){return getFormState().feedbackClassName=t,getFormState().successStrategy=removeClassName.bind(n),getFormState().failureStrategy=addClassName.bind(n),n}},displayErrorsHere,troubleshoot(){return{state:getFormState(),instance:this}}};return e})()));